openapi: 3.0.3
info:
  title: Movies & TV Shows Platform API
  description: Go + MongoDB backend for Movies & TV Shows streaming platform with TMDB integration
  version: 1.0.0
  contact:
    name: API Support
    email: support@moviesplatform.com

servers:
  - url: http://localhost:8080/api/v1
    description: Development server
  - url: https://api.moviesplatform.com/v1
    description: Production server

paths:
  /health:
    get:
      tags:
        - Health
      summary: Health check endpoint
      operationId: getHealth
      responses:
        '200':
          description: Service is healthy
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthResponse'

  /movies/{id}:
    get:
      tags:
        - Movies
      summary: Get movie by internal ID
      operationId: getMovieById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            pattern: '^[0-9a-fA-F]{24}$'
      responses:
        '200':
          description: Movie found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Movie'
        '404':
          description: Movie not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /movies/tmdb/{tmdb_id}:
    get:
      tags:
        - Movies
      summary: Get movie by TMDB ID
      operationId: getMovieByTmdbId
      parameters:
        - name: tmdb_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Movie found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Movie'
        '404':
          description: Movie not found

  /movies/search:
    get:
      tags:
        - Movies
      summary: Search movies
      operationId: searchMovies
      parameters:
        - name: query
          in: query
          required: true
          schema:
            type: string
        - name: page
          in: query
          schema:
            type: integer
            minimum: 1
            default: 1
      responses:
        '200':
          description: Search results
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedMoviesResponse'

  /movies/popular:
    get:
      tags:
        - Movies
      summary: Get popular movies
      operationId: getPopularMovies
      parameters:
        - name: page
          in: query
          schema:
            type: integer
            minimum: 1
            default: 1
      responses:
        '200':
          description: Popular movies
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedMoviesResponse'

  /movies/genre/{genre_id}:
    get:
      tags:
        - Movies
      summary: Get movies by genre
      operationId: getMoviesByGenre
      parameters:
        - name: genre_id
          in: path
          required: true
          schema:
            type: integer
        - name: page
          in: query
          schema:
            type: integer
            minimum: 1
            default: 1
      responses:
        '200':
          description: Movies by genre
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedMoviesResponse'

  /tv/{id}:
    get:
      tags:
        - TV Shows
      summary: Get TV show by ID
      operationId: getTVShowById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: TV show found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TVShow'

  /genres/{media_type}:
    get:
      tags:
        - Genres
      summary: Get genres for media type
      operationId: getGenres
      parameters:
        - name: media_type
          in: path
          required: true
          schema:
            type: string
            enum: [movie, tv]
      responses:
        '200':
          description: Genres list
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenresResponse'

components:
  schemas:
    HealthResponse:
      type: object
      required:
        - status
        - timestamp
        - database
      properties:
        status:
          type: string
          enum: [healthy, unhealthy]
        timestamp:
          type: string
          format: date-time
        database:
          type: string
          enum: [connected, disconnected]
        version:
          type: string

    Movie:
      type: object
      required:
        - id
        - tmdbMovieId
        - title
        - createdAt
        - updatedAt
      properties:
        id:
          type: string
          pattern: '^[0-9a-fA-F]{24}$'
        tmdbMovieId:
          type: integer
        title:
          type: string
        overview:
          type: string
        posterPath:
          type: string
        backdropPath:
          type: string
        releaseDate:
          type: string
          format: date
        runtime:
          type: integer
        voteAverage:
          type: number
          format: float
        voteCount:
          type: integer
        genres:
          type: array
          items:
            $ref: '#/components/schemas/Genre'
        adult:
          type: boolean
        budget:
          type: integer
          format: int64
        revenue:
          type: integer
          format: int64
        status:
          type: string
        tagline:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time

    TVShow:
      type: object
      properties:
        id:
          type: string
          pattern: '^[0-9a-fA-F]{24}$'
        tmdbTvShowId:
          type: integer
        name:
          type: string
        overview:
          type: string
        posterPath:
          type: string
        backdropPath:
          type: string
        firstAirDate:
          type: string
          format: date
        lastAirDate:
          type: string
          format: date
        numberOfSeasons:
          type: integer
        numberOfEpisodes:
          type: integer
        voteAverage:
          type: number
          format: float
        voteCount:
          type: integer
        genres:
          type: array
          items:
            $ref: '#/components/schemas/Genre'
        status:
          type: string
        type:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time

    Genre:
      type: object
      required:
        - id
        - name
      properties:
        id:
          type: integer
        name:
          type: string

    PaginatedMoviesResponse:
      type: object
      required:
        - movies
        - page
        - totalPages
      properties:
        movies:
          type: array
          items:
            $ref: '#/components/schemas/Movie'
        page:
          type: integer
        totalPages:
          type: integer

    GenresResponse:
      type: object
      required:
        - genres
      properties:
        genres:
          type: array
          items:
            $ref: '#/components/schemas/Genre'

    ErrorResponse:
      type: object
      required:
        - error
        - message
      properties:
        error:
          type: string
          example: 'movie_not_found'
        message:
          type: string
          example: 'Movie not found'
        details:
          type: object
          additionalProperties: true

tags:
  - name: Health
    description: Health check endpoints
  - name: Movies
    description: Movie-related endpoints
  - name: TV Shows
    description: TV show-related endpoints
  - name: Genres
    description: Genre-related endpoints
